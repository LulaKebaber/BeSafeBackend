from fastapi import Depends, Response

from app.utils import AppModel

from app.auth.adapters.jwt_service import JWTData
from app.auth.router.dependencies import parse_jwt_user_data

from ..service import Service, get_service

from . import router


class UpdateContactResponse(AppModel):
    name: str
    phone: str
    gps: bool

@router.patch("/users/contacts")
def update_contact(
    user_id: str,
    input: UpdateContactResponse,
    jwt_data: JWTData = Depends(parse_jwt_user_data),
    svc: Service = Depends(get_service),
) -> dict[str, str]:
    contact_updated = svc.repository.update_contact(
        user_id, jwt_data.user_id, input.dict()
    )
    if contact_updated.modified_count == 1:
        return Response(status_code=200)
    return Response(status_code=404)